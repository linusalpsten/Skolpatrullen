@model WebApp.ViewModels.ProfileCombinedViewModel

@{
    ViewData["Title"] = "Profilsida";
}
@if (Model != null)
{
    <div class="row">
        <div class="col-md-2">
            <h1>Profil</h1>

            <h4>@Model.PVM.User.FirstName @Model.PVM.User.LastNames</h4>
        </div>
        <div class="col-md-10" align="right">
            @{
                if (Model.PVM.User.ProfilePicture != null)
                {
                    var base64 = Convert.ToBase64String(Model.PVM.User.ProfilePicture.Binary);
                    var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                    <img src="@imgsrc" style="max-width:100px;max-height:120px" class="img-thumbnail" />
                }
                else
                {
                    <img src="~/user-solid.svg" style="max-width:100px;max-height:120px;" class="img-thumbnail" />
                }
            }
        </div>
    </div>

}

@await Html.PartialAsync("_ChangeProfilePicture", Model.CPPVM)
@await Html.PartialAsync("_ChangeProfile", Model.PVM)
@await Html.PartialAsync("_ChangePassword", Model.CPVM)

<div id="uploaded_image"></div>

<div class="row">
    <div class="col-12" align="right">
        <a asp-action="ProfilePictureModal" data-toggle="modal" data-target="#croppieTest">Croppie</a>
    </div>
</div>


<div class="modal" id="croppieTest" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form enctype="multipart/form-data" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">CROPPIE</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class=" modal-body">
                    <div id="image_demo" style="width:350px; margin-top:30px">
                    </div>
                    <input type="file" name="upload_image" id="upload_image" accept="image/*" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Avbryt</button>
                    <button type="button" class="actionUpload">Spara</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        $image_crop = $('#image_demo').croppie({
            enableExif: true,
            viewport: {
                width: 200,
                height: 200,
                type: 'circle' //circle
            },
            boundary: {
                width: 300,
                height: 300
            }
        });

        $('#upload_image').on('change', function () {
            var reader = new FileReader();
            reader.onload = function (event) {
                $image_crop.croppie('bind', {
                    url: event.target.result
                }).then(function () {
                    console.log('jQuery bind complete');
                });
            }
            reader.readAsDataURL(this.files[0]);
            $('#croppieTest').modal('show');
        });
        $('.actionUpload').on('click', function() {
            $image_crop.croppie('result', 'blob').then(function (blob) {
                var formData = new FormData();
                formData.append('blob', blob);
                formData.append('filename', 'testFileName.png');

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ChangeProfilePicture", "Profile")',
                    data: formData,
                    processData: false,  // tell jQuery not to process the data
                    contentType: false,  // tell jQuery not to set contentType
                    success: function (msg) {
                        alert("Done, Picture Uploaded." + formData.keys());
                     }
                });
            });
        });
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
