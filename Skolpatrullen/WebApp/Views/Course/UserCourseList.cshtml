@model WebApp.ViewModels.UserCourseListViewModel
@{
    ViewData["Title"] = "UserCourseList";
}

<h1>UserCourseList</h1>

Kurser du är antagen till:
@foreach (var courseParticipant in Model.CourseParticipantList.Where(cp => cp.Status == Database.Models.Status.Antagen))
{
    <div class="card-body bg-light">
            Skola: @Model.SchoolList.SingleOrDefault(sc => sc.Id == courseParticipant.Course.SchoolId).Name
        <div>
            Kurs: @Html.ActionLink(linkText: courseParticipant.Course.Name, actionName: "GetCourseById", controllerName: "Course", new { id = courseParticipant.CourseId })
        </div>
        <div>
            Status: @courseParticipant.Status Roll: @courseParticipant.Role
        </div>
        @if (courseParticipant.Grade != null)
        {
            <div>Betyg: @courseParticipant.Grade</div>
        }
    </div>
    <br />
}
Övriga kurser:
@foreach (var courseParticipant in Model.CourseParticipantList.Where(cp => cp.Status != Database.Models.Status.Antagen))
{
    <div class="card-body bg-light">
            Skola: @Model.SchoolList.SingleOrDefault(sc => sc.Id == courseParticipant.Course.SchoolId).Name
        <div>
            Kurs: @Html.ActionLink(linkText: courseParticipant.Course.Name, actionName: "GetCourseById", controllerName: "Course", new { id = courseParticipant.CourseId })
        </div>
        <div>
            Status: @courseParticipant.Status
            @if(courseParticipant.Status==Database.Models.Status.Ansökt)
            {
            <a href="@Url.ActionLink("Remove", "CourseParticipant", new Database.Models.CourseParticipant { Id = courseParticipant.Id })">Ta bort ansökan</a>
            }
        </div>
    </div>
    <br />
}